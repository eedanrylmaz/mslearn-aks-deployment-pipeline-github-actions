name: Build and push the latest build to staging
on:
  push:
    branches: [ main ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0
        
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest
  deploy:
    runs-on: ubuntu-20.04
    needs: build # Will wait for the execution of the previous job
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v2
  
      - name: Install Helm
        uses: Azure/setup-helm@v3
        with:
          version: v3.3.1

      - name: Azure Login
        uses: Azure/login@v1.5.1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          resource-group: mslearn-gh-pipelines-27956
          cluster-name: contoso-video
          
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
          
          
